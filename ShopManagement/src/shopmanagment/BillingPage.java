/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package shopmanagment;

import java.awt.Color;
import java.sql.*;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JTextField;
import oracle.jdbc.OracleTypes;

/**
 *
 * @author Faiaz,Sanim
 */
public class BillingPage extends javax.swing.JFrame {

    /**
     * Creates new form BillingPage
     */
    Connection conn;
    PreparedStatement preStatment;
    ResultSet result;
    String sql;
    String up;
    ArrayList<Product> V;
    Vector A;
    boolean flag, flag1;
    int cnt = 0;
    double totP = 0,totC = 0;

    void addName() {
        if (flag) {
            return;
        }
        flag1 = true;

        String cur = category.getSelectedItem().toString();
        sql = "select * from product where product.category='" + cur + "' order by product.name";

        try {
            V.clear();
            name.removeAllItems();
            preStatment = conn.prepareStatement(sql);
            result = preStatment.executeQuery();

            while (result.next()) {
                try {
                    String a, b, c, d;
                    a = result.getString("name");
                    b = result.getString("buyingprice");
                    c = result.getString("sellingprice");
                    d = result.getString("available");

                    name.addItem(a);
                    V.add(new Product(a, b, c, d));
                } catch (Exception ex) {
                    System.out.println(":(");
                }
            }
        } catch (Exception e) {
        }

        if (V.size() == 0) {
            able.setText("0");
        } else {
            able.setText(V.get(name.getSelectedIndex()).abaiable);
        }
        flag1 = false;

    }

    public BillingPage() {
        initComponents();
        V = new ArrayList<>();
        A = new Vector<>();
        flag = true;
        cnt = 0;
        up = "";
        up = ""
                + " declare "
                + " begin ";
        try {
            category.removeAllItems();
            conn = new DBhandeller().getConnection();
            sql = "select c_gory from category order by c_gory";
            preStatment = conn.prepareStatement(sql);
            result = preStatment.executeQuery();
            while (result.next()) {
                try {
                    category.addItem(result.getString("c_gory"));
                } catch (SQLException ex) {
                    Logger.getLogger(ShopManagment.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(UpdateProduct.class.getName()).log(Level.SEVERE, null, ex);
        }

        flag = false;
        addName();
        quantity.setInputVerifier(new Check());
        totPrice.setText("0");
        totP = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        quantity = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        totPrice = new javax.swing.JLabel();
        makeBill = new javax.swing.JButton();
        category = new javax.swing.JComboBox();
        name = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        able = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product Name", "Unit Price", "No of Unit", "Total"
            }
        ));
        jScrollPane1.setViewportView(Table);

        jLabel1.setText("Catagory");

        jLabel2.setText("Name");

        jLabel3.setText("Quantity");

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Total Price");

        totPrice.setText("jLabel5");

        makeBill.setText("Make Bill");
        makeBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeBillActionPerformed(evt);
            }
        });

        category.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryActionPerformed(evt);
            }
        });

        name.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("Avaiable");

        able.setText("jLabel6");

        jButton2.setText("cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(156, 156, 156))
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(39, 39, 39)
                        .addComponent(totPrice)
                        .addGap(170, 170, 170))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel5))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(able)
                                    .addGap(115, 115, 115)
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(63, 63, 63)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(makeBill)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(able))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(totPrice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(makeBill)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (quantity.getBackground() == Color.red || V.size() == 0) {
            return;
        }
        String a, b, c;
        a = category.getSelectedItem().toString();
        b = name.getSelectedItem().toString();
        int id = name.getSelectedIndex();
        c = quantity.getText();
        Table.setValueAt(b, cnt, 0);
        Table.setValueAt(V.get(id).sellingPrice, cnt, 1);
        Table.setValueAt(c, cnt, 2);
        double tot = Double.valueOf(V.get(id).sellingPrice);
        tot *= Double.valueOf(c);
        totP += tot;
        Table.setValueAt(String.valueOf(tot), cnt, 3);
        
        tot = Double.valueOf(V.get(id).costPrice);
        tot *= Double.valueOf(c);
        totC += tot;
        
        
        totPrice.setText(String.valueOf(totP));
        cnt++;
        int tmp = Integer.valueOf(V.get(id).abaiable) - Integer.valueOf(c);
        A.add(tmp);
        V.set(id, new Product(V.get(id).name, V.get(id).costPrice, V.get(id).sellingPrice, String.valueOf(tmp)));
        able.setText(String.valueOf(tmp));
        up = up
                + "Update product SET product.available = ? where product.name='" + V.get(id).name + "';";
    }//GEN-LAST:event_jButton1ActionPerformed

    private void makeBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeBillActionPerformed
        // TODO add your handling code here:
        up = up 
                + "insert into TRANSACTION values(?,?);"
                + "commit;"
                + "End;";
        CallableStatement cs = null;
        try {
            cs = conn.prepareCall(up);
        } catch (SQLException ex) {
            Logger.getLogger(BillingPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        java.util.Date date = new java.util.Date();
        Timestamp t = new Timestamp(date.getTime());
        
        try {
            cs.setTimestamp(cnt+1,t);
            cs.setDouble(cnt+2,totP-totC);
        } catch (SQLException ex) {
            Logger.getLogger(BillingPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        Enumeration e = A.elements();
        int cnt = A.size();
        while (e.hasMoreElements()) {
            try {
                cs.setInt(cnt, (int) e.nextElement());
            } catch (SQLException ex) {
                Logger.getLogger(BillingPage.class.getName()).log(Level.SEVERE, null, ex);
            }
            cnt--;
        }
        try {
            cs.execute();
        } catch (SQLException ex) {
            Logger.getLogger(BillingPage.class.getName()).log(Level.SEVERE, null, ex);
        }

        this.dispose();
        MainPage p = new MainPage();
        p.setVisible(true);
    }//GEN-LAST:event_makeBillActionPerformed

    private void categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryActionPerformed
        // TODO add your handling code here:
        addName();
    }//GEN-LAST:event_categoryActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        MainPage p = new MainPage();
        p.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BillingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BillingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BillingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BillingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BillingPage().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JLabel able;
    private javax.swing.JComboBox category;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton makeBill;
    private javax.swing.JComboBox name;
    private javax.swing.JTextField quantity;
    private javax.swing.JLabel totPrice;
    // End of variables declaration//GEN-END:variables

    private class Check extends InputVerifier {

        @Override
        public boolean verify(JComponent jc) {
            JTextField tmp = (JTextField) jc;
            if (Integer.valueOf(able.getText().toString()) >= Integer.valueOf(tmp.getText().toString())) {
                tmp.setBackground(Color.WHITE);
                return true;
            } else {
                tmp.setBackground(Color.RED);
                return false;
            }

        }
    }
}
